<h1 class="page-header">Flight Planner</h1>
<div id="waypoints">
    <div id="wp_overlay">
        <a id="enter_wp_mode" class="button">Enter Planner mode</a>
    </div>
    <p>Click the map to add a waypoint or load the a predefined set of waypoints:</p>
    <div class="callout callout-primary">
        <h3>Load a waypoint set</h3>
        {{ form }}
    </div>
    <p>Click waypoints to add them to your flight path</p>
    <ul id="flight_types">
        <li>
            An open distance flight of 5 or less points can be saved as a declaration of intent by clicking
            <a id="decOD" class="button inline" data-ajax-click="planner:get_form" data-ajax-post='{"coordinates":"", "ftid":{{ flight_type.GO_ID }}}' disabled>Here</a>
        </li>
        <li>
            An out and return of 3 points where the 3rd is also the 1st can be saved as a declaration of intent by clicking
            <a id="decOR" class="button inline" data-ajax-click="planner:get_form" data-ajax-post='{"coordinates":"", "ftid":{{ flight_type.OR_ID }}}' disabled>Here</a></li>
        <li>
            A triangle of 4 points where the 4th is also the 1st can be saved as a declaration of intent by clicking
            <a id="decTR" class="button inline" data-ajax-click="planner:get_form" data-ajax-post='{"coordinates":"", "ftid":{{ flight_type.TR_ID }}}' disabled>Here</a>
        </li>
    </ul>
    <div id="path_wrapper">
        <h4 class="page-header">Path</h4>
        <div id="path"></div>
    </div>
    <p><a id="leave_wp_mode" class="button">Leave Waypoint mode (clears map of markers a well)</a></p>
</div>

<script>
    var load_callback = load_callback || [];
    load_callback.push(function () {
        $("a#enter_wp_mode").click(function () {
            map.planner.enable();
        });
        $("a#leave_wp_mode").click(function () {
            map.planner.clear();
        });
    });
    var map = map || [];
    map.push( function () {
        map.planner.calculate_distances();
        map.planner.writeplanner();
        {% if url_string %}
        map.planner.load_string("{{ url_string }}");
        {% endif %}
    });
</script>